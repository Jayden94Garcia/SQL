# For this project, I downloaded Spotify data from Kaggle.
# Then I created a table to insert Spotify data into.
# Finally, I performed analytics on the data using SQL. 

#Creating the table: 
CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness text NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL 
)

#Then I inserted the Spotify Data .csv into the table.

#Next, I explored the data using the following SQL. 

#First I find the most popular tracks in the dataset
SELECT track_name, artist_name, popularity
FROM BIT_DB.spotifydata
ORDER BY popularity DESC
LIMIT 10;

#Then I explore the average danceability, energy, and popularity for each artist and track
SELECT
    artist_name,
    track_name,
    AVG(popularity) AS avg_popularity,
    AVG(danceability) AS avg_danceability,
    AVG(energy) AS avg_energy
FROM BIT_DB.spotifydata
GROUP BY artist_name, track_name;

#After that I identify tracks with high valence and low energy
SELECT track_name, artist_name, valence, energy
FROM BIT_DB.spotifydata
WHERE valence > 0.7 AND energy < 0.5;

#Later I find the tempo distribution of the tracks
SELECT tempo, COUNT(*) AS track_count
FROM BIT_DB.spotifydata
GROUP BY tempo
ORDER BY tempo;

#Lastly I explore the distribution of time signatures in the dataset
SELECT time_signature, COUNT(*) AS track_count
FROM BIT_DB.spotifydata
GROUP BY time_signature;

